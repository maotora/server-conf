# goto last used window
bind-key C-a last-window

# Nested Tmux Session
# send to tmux session within another tmux session; like screen
bind-key a send-prefix

# fix delay time between tmux & vim
set-option -sg escape-time 0

# default shell
set-option -g default-command /bin/zsh
set-option -g default-shell /bin/zsh

# reload config
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded"

# edit config
bind-key e new-window -n 'conf' '${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display "~/.tmux.conf sourced"'
bind-key '/' new-window 'man tmux'

# clear screen and scrollback history
bind-key -n C-k send-keys C-l \; run 'tmux clear-history'
#unbind-key C-l
#bind-key -n C-k 'tmux clear-history'

# set display timelimit
set-option -g display-panes-time 2000
set-option -g display-time 1000  

# history size
set-option -g history-limit 10000

# enable shell hotkeys C-left/C-right
# http://sigizmund.com/tmux-and-c-leftc-right/
set-window-option -g xterm-keys on

# enable 256 color terminal
# http://blog.sanctum.geek.nz/256-colour-terminals/
set-option -g default-terminal "screen-256color"

# vim keys in command prompt
set-option -g status-keys vi

# select panes
bind-key k select-pane -U
bind-key h select-pane -L
bind-key j select-pane -D
bind-key l select-pane -R

#select panes by number
#Result of bind-key q is pane numbers and from those

bind-key M-1 select-pane -t 1
bind-key M-2 select-pane -t 2
bind-key M-3 select-pane -t 3
bind-key M-4 select-pane -t 4
bind-key M-5 select-pane -t 5
bind-key M-6 select-pane -t 6

# cycle windows/panes (no prefix)
bind-key -n M-k select-pane -t :.-	# prev pane
bind-key -n M-j select-pane -t :.+	# next pane
bind-key -n M-h select-window -t :-	# previous window
bind-key -n M-l select-window -t :+	# next window

# resize panes
bind-key -r J resize-pane -D 1 
bind-key -r K resize-pane -U 1 
bind-key -r H resize-pane -L 1 
bind-key -r L resize-pane -R 1 

# better pane split bindings with current path (tmux 1.9+)
bind-key \ split-window -h -c "#{pane_current_path}"	# vertical split
bind-key - split-window -v -c "#{pane_current_path}"	# horizontal split

# new window/pane with the current path (tmux 1.9+)
bind-key c new-window -c "#{pane_current_path}"

# kill window/pane without prompt
# http://unix.stackexchange.com/a/30283
bind-key & kill-window
bind-key x kill-pane

# sync panes; send what you are typing to other panes.
bind-key C-l set-window-option synchronize-panes

#}}}
#-------- Copy Mode (Vim Style) {{{
#------------------------------------------------------
# This section of hotkeys mainly work in copy mode and no where else

# vim keys in copy or choice mode
set-window-option -g mode-keys vi

# copying selection vim style
# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
# https://github.com/myfreeweb/dotfiles/blob/master/tmux.conf
bind-key Enter copy-mode			# enter copy mode; default [
bind-key -t vi-copy Escape cancel		# exit copy mode; or hit q
bind-key -t vi-copy v begin-selection		# begin visual mode
bind-key -t vi-copy V select-line		# visual line
bind-key -t vi-copy y copy-selection		# yank
bind-key -t vi-copy r rectangle-toggle 		# visual block toggle
bind-key p paste-buffer				# paste; default ]
bind-key P choose-buffer 			# choose which buffer to paste from

# read and write and delete paste buffer ( xsel method)
# https://wiki.archlinux.org/index.php/Tmux#ICCCM_Selection_Integration
# ctrl+shift+v
bind-key < command-prompt -p "copy to tmux (hit enter to confirm):" "run-shell 'tmux set-buffer -- \"$(xsel -o -b)\"'"
bind-key > command-prompt -p "copy to xsel (hit enter to confirm):" "run-shell 'tmux show-buffer | xsel -i -b'"

#-------- Statusbar {{{
#------------------------------------------------------
set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]##[fg=colour255, bg=colour27] #I  #W #[fg=colour27, bg=colour235]"


# }}}
#-------- Window / Pane Settings {{{
#------------------------------------------------------
# start window/pane index on 1 instead of 0
set-option -g base-index 1
set-window-option -g pane-base-index 1

# pane divider color; non active pane
set-option -g pane-border-fg white
set-option -g pane-border-bg black

# pane divider color; active pane
# helps when you have more than two panes.
# version 1.8 makes it easy to see 2 panes now
set-option -g pane-active-border-fg red
set-option -g pane-active-border-bg black

# make the current window the first window
bind T swap-window -t 1

# swap windows/panes
bind-key -n M-Left swap-window -t -1
bind-key -n M-Right swap-window -t +1
# bind-key -n M-Up swap-pane -U
# bind-key -n M-Down swap-pane -D

# auto renumber windows sequentially
# https://github.com/thoughtbot/dotfiles/blob/master/tmux.conf
set-option -g renumber-windows on

#}}} templates to make my server life easier!

#junk template
#bind-key M-j new-window -n Ranger -c $HOME \; \
# 	send-keys ' clear && ranger' 'Enter' \; \
#	split-window -v -p 50 -t 1  \; \
# 	send-keys ' clear && ranger' 'Enter' \; \
#	split-window -h -p 50 -t 1  \; \
# 	send-keys ' clear && ranger' 'Enter' \; \
#	split-window -h -p 50 -t 2  \; \
#	send-keys ' clear && ranger' 'Enter' \; \

# Server Stats..

bind-key M-s new-window -n Statistics -c $HOME \; \
 	send-keys 'clear && journalctl -afb -p info SYSLOG_FACILITY=4 SYSLOG_FACILITY=10' 'Enter' \; \
	split-window -v -p 50 -t 1  \; \
	send-keys 'clear && htop' 'Enter' \; \
